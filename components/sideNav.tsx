"use client";
import React from "react";
import Link from "next/link";

import { CgLogOut } from "react-icons/cg";
import { RiAdvertisementLine } from "react-icons/ri";

import { usePathname, useRouter } from "next/navigation";
import Cookies from "js-cookie";
import { IoIosNotifications } from "react-icons/io";
import { GiThink } from "react-icons/gi";
import { FaHandPointUp } from "react-icons/fa";

type NavItem = {
  title: string;
  link: string;
  svg: (isActive: boolean) => JSX.Element | null;
};

const SideNav: React.FC = () => {
  const pathname = usePathname();
  const navTexts: NavItem[] = [
    {
      title: "Dashboard",
      link: "dashboard",
      svg: (isActive) => (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 28 31"
          fill="none"
          stroke={isActive ? "black" : "white"}
          strokeWidth="3"
          strokeLinecap="round"
          strokeLinejoin="round"
        >
          <path d="M10.3408 28.6488V15.3155H18.3408V28.6488M2.34082 11.3155L14.3408 1.98218L26.3408 11.3155V25.9822C26.3408 26.6894 26.0599 27.3677 25.5598 27.8678C25.0597 28.3679 24.3814 28.6488 23.6742 28.6488H5.00749C4.30024 28.6488 3.62197 28.3679 3.12187 27.8678C2.62177 27.3677 2.34082 26.6894 2.34082 25.9822V11.3155Z" />
        </svg>
      ),
    },
    {
      title: "User List",
      link: "user-list",

      svg: (isActive) => (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 33 33"
          fill={isActive ? "none" : "white"}
        >
          <path
            d="M11.4743 8.31543H28.8076M11.4743 16.3154H28.8076M11.4743 24.3154H28.8076M4.80762 8.31543H4.82095M4.80762 16.3154H4.82095M4.80762 24.3154H4.82095"
            stroke={isActive ? "black" : "white"}
            strokeWidth="3"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      ),
    },
    {
      title: "Cashout request",
      link: "cashout",
      svg: (isActive) => (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 33 33"
          // stroke={isActive ? "black" : "none"}
        >
          <path
            d="M30.8863 0.31543H1.79537C1.4096 0.31543 1.03963 0.484001 0.766847 0.784059C0.494067 1.08412 0.34082 1.49108 0.34082 1.91543V14.7154C0.34082 15.1398 0.494067 15.5467 0.766847 15.8468C1.03963 16.1469 1.4096 16.3154 1.79537 16.3154H6.159V30.7154C6.159 31.1398 6.31225 31.5467 6.58503 31.8468C6.85781 32.1469 7.22778 32.3154 7.61355 32.3154H25.0681C25.4539 32.3154 25.8238 32.1469 26.0966 31.8468C26.3694 31.5467 26.5226 31.1398 26.5226 30.7154V16.3154H30.8863C31.272 16.3154 31.642 16.1469 31.9148 15.8468C32.1876 15.5467 32.3408 15.1398 32.3408 14.7154V1.91543C32.3408 1.49108 32.1876 1.08412 31.9148 0.784059C31.642 0.484001 31.272 0.31543 30.8863 0.31543ZM9.06809 29.1154V25.9154C9.83963 25.9154 10.5796 26.2526 11.1251 26.8527C11.6707 27.4528 11.9772 28.2667 11.9772 29.1154H9.06809ZM23.6135 29.1154H20.7045C20.7045 28.2667 21.011 27.4528 21.5565 26.8527C22.1021 26.2526 22.842 25.9154 23.6135 25.9154V29.1154ZM23.6135 22.7154C22.0705 22.7154 20.5906 23.3897 19.4995 24.5899C18.4084 25.7902 17.7954 27.418 17.7954 29.1154H14.8863C14.8863 27.418 14.2733 25.7902 13.1822 24.5899C12.091 23.3897 10.6112 22.7154 9.06809 22.7154V9.91543H23.6135V22.7154ZM29.4317 13.1154H26.5226V8.31543C26.5226 7.89108 26.3694 7.48412 26.0966 7.18406C25.8238 6.884 25.4539 6.71543 25.0681 6.71543H7.61355C7.22778 6.71543 6.85781 6.884 6.58503 7.18406C6.31225 7.48412 6.159 7.89108 6.159 8.31543V13.1154H3.24991V3.51543H29.4317V13.1154ZM16.3408 21.1154C17.2039 21.1154 18.0475 20.8339 18.7651 20.3065C19.4827 19.7791 20.042 19.0294 20.3723 18.1523C20.7026 17.2752 20.789 16.3101 20.6206 15.379C20.4522 14.4479 20.0366 13.5926 19.4264 12.9213C18.8161 12.25 18.0386 11.7929 17.1921 11.6077C16.3457 11.4225 15.4683 11.5175 14.6709 11.8808C13.8736 12.2441 13.1921 12.8593 12.7126 13.6487C12.2331 14.438 11.9772 15.3661 11.9772 16.3154C11.9772 17.5885 12.4369 18.8094 13.2553 19.7095C14.0736 20.6097 15.1835 21.1154 16.3408 21.1154ZM16.3408 14.7154C16.6285 14.7154 16.9097 14.8093 17.1489 14.9851C17.3881 15.1609 17.5746 15.4108 17.6846 15.7031C17.7947 15.9955 17.8235 16.3172 17.7674 16.6276C17.7113 16.9379 17.5728 17.223 17.3693 17.4468C17.1659 17.6706 16.9067 17.823 16.6246 17.8847C16.3424 17.9464 16.05 17.9147 15.7842 17.7936C15.5184 17.6725 15.2912 17.4675 15.1314 17.2043C14.9716 16.9412 14.8863 16.6319 14.8863 16.3154C14.8863 15.8911 15.0395 15.4841 15.3123 15.1841C15.5851 14.884 15.9551 14.7154 16.3408 14.7154Z"
            fill={isActive ? "black" : "white"}
          />
        </svg>
      ),
    },
    {
      title: "Manage Job offer",
      link: "manage-job",
      svg: (isActive) => (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 34 35"
          // stroke={isActive ? "black" : "white"}
          fill={isActive ? "none" : "#5427D7"}
        >
          <path
            d="M15.2186 31.7154H12.9755C7.23954 31.7154 4.37237 31.7154 2.58999 29.8994C0.807617 28.0834 0.807617 25.1602 0.807617 19.3154C0.807617 13.4706 0.807617 10.5474 2.58999 8.73142C4.37237 6.91542 7.23954 6.91542 12.9755 6.91542H19.0602C24.7961 6.91542 27.6649 6.91542 29.4473 8.73142C30.8184 10.1282 31.1336 12.181 31.2072 15.7154"
            stroke={isActive ? "black" : "white"}
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M23.2073 6.91542L23.0473 6.41942C22.2553 3.95542 21.8601 2.72343 20.9177 2.01943C19.9738 1.31543 18.7226 1.31543 16.2154 1.31543H15.7946C13.2906 1.31543 12.0379 1.31543 11.0955 2.01943C10.1515 2.72343 9.75628 3.95542 8.96429 6.41942L8.8075 6.91542M24.9849 19.3234C25.2809 19.0514 25.4281 18.9154 25.6073 18.9154C25.7865 18.9154 25.9337 19.0514 26.2297 19.3234L27.3705 20.3746C27.5081 20.501 27.5769 20.565 27.6617 20.5954C27.7481 20.6274 27.8409 20.6242 28.0297 20.6162L29.5688 20.5554C29.9656 20.5394 30.164 20.533 30.3 20.6466C30.436 20.7602 30.4632 20.957 30.516 21.3506L30.7272 22.9282C30.7528 23.1106 30.764 23.2002 30.8088 23.2802C30.8536 23.357 30.9256 23.413 31.0696 23.5266L32.3112 24.5026C32.6184 24.7458 32.772 24.8658 32.8024 25.0386C32.8328 25.2114 32.7288 25.3778 32.524 25.7106L31.6824 27.0658C31.5864 27.221 31.5384 27.2994 31.5224 27.3858C31.5064 27.4722 31.5256 27.5634 31.564 27.7426L31.8984 29.3074C31.9784 29.6914 32.02 29.8834 31.932 30.037C31.844 30.1906 31.6568 30.2514 31.284 30.373L29.8024 30.8546C29.6264 30.9122 29.5368 30.941 29.468 30.9986C29.3992 31.0578 29.356 31.141 29.2712 31.3058L28.548 32.6994C28.364 33.0562 28.2712 33.2338 28.1032 33.2946C27.9353 33.3554 27.7513 33.2786 27.3801 33.125L25.9593 32.5362C25.7849 32.4642 25.6985 32.4274 25.6073 32.4274C25.5161 32.4274 25.4297 32.4642 25.2553 32.5362L23.8345 33.125C23.4633 33.2786 23.2793 33.3554 23.1113 33.2946C22.9433 33.2338 22.8505 33.0546 22.6665 32.6994L21.9433 31.3058C21.8569 31.141 21.8153 31.0578 21.7465 31.0002C21.6777 30.9426 21.5881 30.9122 21.4121 30.8562L19.9306 30.373C19.5578 30.2514 19.3706 30.1906 19.2826 30.037C19.1946 29.8834 19.2346 29.693 19.3162 29.3074L19.6522 27.7426C19.689 27.5634 19.7082 27.4738 19.6922 27.3874C19.6593 27.2716 19.6051 27.1631 19.5322 27.0674L18.6922 25.7106C18.4842 25.3778 18.3818 25.2114 18.4122 25.0386C18.4426 24.8658 18.5962 24.7458 18.9034 24.5042L20.145 23.5282C20.2889 23.413 20.3609 23.357 20.4057 23.2786C20.4505 23.2002 20.4617 23.1106 20.4857 22.9266L20.6985 21.3506C20.7513 20.9586 20.7785 20.7602 20.9145 20.6466C21.0505 20.533 21.2489 20.5394 21.6457 20.5554L23.1865 20.6162C23.3737 20.6242 23.4665 20.6274 23.5529 20.5954C23.6377 20.5634 23.7065 20.501 23.8441 20.3746L24.9849 19.3234Z"
            stroke={isActive ? "black" : "white"}
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      ),
    },
    {
      title: "Grants",
      link: "grants",
      svg: (isActive) => (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 33 20"
          fill={isActive ? "none" : "#5427D7"}
        >
          <path
            d="M15.0417 8.50008H17.9583C18.7319 8.50008 19.4737 8.19279 20.0207 7.64581C20.5677 7.09883 20.875 6.35696 20.875 5.58341C20.875 4.80987 20.5677 4.068 20.0207 3.52102C19.4737 2.97404 18.7319 2.66675 17.9583 2.66675H13.5833C12.7083 2.66675 11.9792 2.95842 11.5417 3.54175L3.375 11.4167"
            stroke={isActive ? "black" : "white"}
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M9.20829 17.25L11.5416 15.2084C11.9791 14.625 12.7083 14.3334 13.5833 14.3334H19.4166C21.0208 14.3334 22.4791 13.75 23.5 12.5834L30.2083 6.1667C30.771 5.63488 31.0995 4.9013 31.1214 4.12732C31.1433 3.35334 30.8568 2.60237 30.325 2.03961C29.7931 1.47686 29.0596 1.14841 28.2856 1.12653C27.5116 1.10465 26.7606 1.39113 26.1979 1.92295L20.0729 7.61045M1.91663 9.95836L10.6666 18.7084"
            stroke={isActive ? "black" : "white"}
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      ),
    },
    {
      title: "Scholarships",
      link: "scholarships",
      svg: (isActive) => (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 36 35"
          stroke={isActive ? "black" : "none"}
        >
          <g clipPath="url(#clip0_363_1633)">
            <path
              d="M15.5084 6.38462C16.2741 6.02142 17.1109 5.83301 17.9584 5.83301C18.8059 5.83301 19.6427 6.02142 20.4084 6.38462L34.6242 13.1192C34.8719 13.2364 35.0815 13.421 35.2291 13.6518C35.3766 13.8827 35.4562 14.1504 35.4586 14.4244C35.4611 14.6984 35.3863 14.9675 35.2428 15.2009C35.0994 15.4343 34.8931 15.6226 34.6476 15.7442L20.5017 22.7617C19.7114 23.1543 18.8409 23.3586 17.9584 23.3586C17.0759 23.3586 16.2054 23.1543 15.4151 22.7617L3.37507 16.7884V23.3334C3.37507 23.7201 3.22142 24.0911 2.94793 24.3646C2.67444 24.6381 2.30351 24.7917 1.91674 24.7917C1.52996 24.7917 1.15903 24.6381 0.885538 24.3646C0.612048 24.0911 0.458402 23.7201 0.458402 23.3334V14.5105C0.444067 14.222 0.515691 13.9358 0.664196 13.6881C0.812701 13.4405 1.0314 13.2425 1.29257 13.1192L15.5084 6.38462ZM6.29174 21.493V26.25C6.29178 26.4419 6.32967 26.6318 6.40324 26.809C6.47681 26.9862 6.58462 27.1471 6.72049 27.2825L6.72632 27.2913L6.7934 27.3525L6.9684 27.5159C7.11424 27.652 7.32521 27.8338 7.60132 28.0613C8.14673 28.5075 8.93424 29.0967 9.91715 29.6888C11.8713 30.8584 14.683 32.0834 17.9584 32.0834C21.2338 32.0834 24.0484 30.8584 25.9996 29.6888C27.0494 29.0586 28.0377 28.3311 28.9513 27.5159L29.1263 27.3525L29.173 27.3059L29.1905 27.2884L29.1934 27.2855L29.1992 27.2825C29.3346 27.1469 29.4418 26.9858 29.5149 26.8087C29.588 26.6315 29.6254 26.4417 29.6251 26.25V21.49L21.7967 25.375C20.6038 25.9671 19.2901 26.2752 17.9584 26.2752C16.6267 26.2752 15.313 25.9671 14.1201 25.375L6.29174 21.493Z"
              fill={isActive ? "black" : "white"}
            />
          </g>
          <defs>
            <clipPath id="clip0_363_1633">
              <rect
                width="35"
                height="35"
                fill={isActive ? "black" : "white"}
                transform="translate(0.458374)"
              />
            </clipPath>
          </defs>
        </svg>
      ),
    },
    {
      title: "Innovations",
      link: "innovation",
      svg: (isActive) => (
        <GiThink
          className={`${isActive ? "text-black" : "text-white"} text-2xl`}
        />
      ),
    },
    {
      title: "Projects",
      link: "projects",
      svg: (isActive) => (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 35 35"
          stroke={isActive ? "black" : "white"}
        >
          <path
            d="M19.0896 29.1667H7.29167V8.75008H4.375V29.1667C4.375 29.9403 4.68229 30.6822 5.22927 31.2291C5.77625 31.7761 6.51812 32.0834 7.29167 32.0834H20.1396C19.6033 31.1887 19.2466 30.198 19.0896 29.1667ZM27.7083 2.91675H20.4167V10.2084L17.5 8.02092L14.5833 10.2084V2.91675H13.125C12.3515 2.91675 11.6096 3.22404 11.0626 3.77102C10.5156 4.318 10.2083 5.05987 10.2083 5.83341V23.3334C10.2083 24.107 10.5156 24.8488 11.0626 25.3958C11.6096 25.9428 12.3515 26.2501 13.125 26.2501H19.0896C19.302 24.9925 19.7867 23.7965 20.5098 22.7459C21.233 21.6953 22.1771 20.8155 23.276 20.1681C24.3749 19.5207 25.6021 19.1213 26.8715 18.998C28.141 18.8747 29.422 19.0304 30.625 19.4542V5.83341C30.625 5.05987 30.3177 4.318 29.7707 3.77102C29.2237 3.22404 28.4819 2.91675 27.7083 2.91675ZM29.1667 21.8751V26.2501H33.5417V29.1667H29.1667V33.5417H26.25V29.1667H21.875V26.2501H26.25V21.8751H29.1667Z"
            fill={isActive ? "black" : "white"}
          />
        </svg>
      ),
    },
    {
      title: "Past Questions",
      link: "courses",
      svg: (isActive) => (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 33 33"
          stroke={isActive ? "black" : "white"}
        >
          <path
            d="M16.9289 2.99703L16.8076 2.96671L16.6863 2.99703L1.30762 6.84171V5.20582L16.8076 1.33082L32.3076 5.20582V6.84171L16.9289 2.99703ZM15.1324 31.2455L14.9909 30.9821H14.6919H1.30762V11.2525L1.78817 11.0193L1.79117 11.018L1.82152 11.0046C1.84889 10.9927 1.89039 10.9747 1.9451 10.9517C2.05454 10.9056 2.21672 10.8391 2.42431 10.759C2.83969 10.5987 3.43567 10.3843 4.15366 10.1698C5.59448 9.73942 7.50433 9.31543 9.423 9.31543C12.9095 9.31543 15.986 10.5883 16.6088 10.8582L16.8076 10.9444L17.0064 10.8582C17.6292 10.5883 20.7057 9.31543 24.1922 9.31543C26.1109 9.31543 28.0208 9.73942 29.4616 10.1698C30.1796 10.3843 30.7755 10.5987 31.1909 10.759C31.3985 10.8391 31.5607 10.9056 31.6701 10.9517C31.7248 10.9747 31.7663 10.9927 31.7937 11.0046L31.8241 11.018L31.8268 11.0192L32.3076 11.2534V30.9821H18.9233H18.6243L18.4828 31.2455C18.1286 31.9049 17.5058 32.3154 16.8076 32.3154C16.1083 32.3154 15.4867 31.905 15.1324 31.2455ZM16.0768 12.7741V12.4268L15.7515 12.3056C14.5103 11.8431 11.8974 10.9821 9.423 10.9821C6.61706 10.9821 4.04574 11.9321 3.08646 12.3087L2.76916 12.4332V12.7741V27.6074V28.3167L3.4372 28.0783C4.87624 27.5648 6.91946 26.9408 9.423 26.9408C11.8736 26.9408 14.0608 27.5968 15.4086 28.0783L16.0768 28.317V27.6074V12.7741ZM30.8461 12.7741V12.4328L30.5282 12.3084C29.5698 11.9336 26.9983 10.9821 24.1922 10.9821C21.7179 10.9821 19.1049 11.8431 17.8638 12.3056L17.5384 12.4268V12.7741V27.6074V28.317L18.2066 28.0783C19.5544 27.5968 21.7416 26.9408 24.1922 26.9408C26.6956 26.9408 28.7375 27.566 30.1785 28.0785L30.8461 28.3159V27.6074V12.7741Z"
            fill={isActive ? "black" : "white"}
            stroke={isActive ? "black" : "white"}
          />
        </svg>
      ),
    },
    {
      title: "Advert Dashboard",
      link: "advert",
      svg: (isActive) => (
        <RiAdvertisementLine
          className={`${isActive ? "text-black" : "text-white"} text-2xl`}
        />
      ),
    },
    {
      title: "Notification",
      link: "notification",
      svg: (isActive) => (
        <IoIosNotifications
          className={`${isActive ? "text-black" : "text-white"} text-2xl`}
        />
      ),
    },
  ];

  const router = useRouter();
  const logOut = () => {
    Cookies.remove("accessToken");
    Cookies.remove("refreshToken");
    router.replace("/login");
  };

  return (
    <div className="md:w-1/4 w-[80px] inline-block overflow-hidden bg-primary h-screen py-7">
      <h1 className="text-white text-sm md:text-xl font-bold text-center px-2 sm:px-0 pb-3">
        Solva Admin
      </h1>
      <hr />
      <div className="flex flex-col justify-between md:items-start items-center overflow-x-scroll h-[85%]">
        <div className="my-8">
          {navTexts.map((nav, index) => {
            const isActive = pathname.includes(`/${nav.link}`);
            return (
              <Link href={`/${nav.link}`} key={index} className="">
                <div
                  key={index}
                  className={`link ${
                    isActive ? "text-black bg-white" : "text-white"
                  } flex items-center rounded-[4px] sm:rounded-[8px] my-3 md:my-1 md:gap-3 gap-0 md:py-2 py-1 cursor-pointer justify-start mx-1 md:mx-3 px-2`}
                >
                  <span className=" flex-none">{nav.svg(isActive)}</span>
                  <span className="text-sm hidden md:block font-medium">
                    {nav.title}
                  </span>
                </div>
              </Link>
            );
          })}
        </div>
        <div className="">
          <div
            onClick={logOut}
            className={`link ${
              pathname.includes("/log-out")
                ? "text-black bg-white"
                : "text-white"
            } flex items-center rounded-[4px] sm:rounded-[8px] my-5 md:my-2 md:gap-3 gap-0 md:py-3 py-1 cursor-pointer justify-start mx-3 px-2 `}
          >
            <CgLogOut className=" w-5 h-4" />
            <span className="text-sm hidden md:block font-medium">Logout</span>
          </div>
        </div>
      </div>
    </div>
  );
};

export default SideNav;
